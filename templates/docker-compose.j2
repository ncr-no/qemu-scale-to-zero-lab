version: '3.8'

services:
  caddy:
    build:
      context: ..
      dockerfile: Dockerfile
      args:
        CADDY_VERSION: "2.9.1"
    ports:
      - "8080:80"
    volumes:
      - ./Caddyfile:/etc/caddy/Caddyfile:ro
      - caddy_logs:/var/log/caddy
    depends_on:
      - sablier
    healthcheck:
      test: ["CMD", "curl", "-f", "http://localhost"]
      interval: 10s
      timeout: 5s
      retries: 5
    networks:
      - qemu-network

  sablier:
    image: repository.ncr.ntnu.no/sablierapp/sablier:1.9.0
    command:
      - start
      - --provider.name=docker
      - --strategy.dynamic.default-theme=hacker-terminal
      - --strategy.dynamic.refresh-frequency=5s
      - --strategy.dynamic.display-name={{ container_prefix | title }}
      - --strategy.dynamic.show-details=true
    volumes:
      - /var/run/docker.sock:/var/run/docker.sock
    restart: always
    healthcheck:
      test: ["CMD", "nc", "-z", "localhost", "10000"]
      interval: 10s
      timeout: 5s
      retries: 5
    networks:
      - qemu-network

{% for i in range(1, n + 1) %}
  {{ container_prefix }}_{{ i }}:
    image: repository.ncr.ntnu.no/qemux/qemu
    container_name: {{ container_prefix }}_{{ i }}
    environment:
      BOOT_MODE: "{{ boot_mode | default('legacy') }}"
      BOOT: "{{ boot_image | default('kali') }}"
      RAM_SIZE: "{{ ram_size | default('2G') }}"
      CPU_CORES: "{{ cpu_cores | default('2') }}"
    devices:
      - /dev/kvm
      - /dev/net/tun
    cap_add:
      - NET_ADMIN
    expose:
      - "8006"
    volumes:
      - {% if volume_prefix == '.' %}.{% else %}{{ volume_prefix }}{% endif %}/{{ container_prefix }}_{{ i }}:/storage:rw
    restart: unless-stopped
    labels:
      - sablier.enable=true
      - sablier.group=qemu-lab
    healthcheck:
      test: ["CMD", "curl", "-f", "http://localhost:8006"]
      interval: 15s
      timeout: 5s
      retries: 5
    networks:
      - qemu-network
{% endfor %}

networks:
  qemu-network:
    driver: bridge

volumes:
  caddy_data:
  caddy_config:
  caddy_logs: 